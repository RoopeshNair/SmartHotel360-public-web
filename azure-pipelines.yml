# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: My First Build
    pool:
      vmImage: 'Ubuntu-16.04'
    continueOnError: true
    steps:
    - script: echo my first Build job

- stage: test
  dependsOn: Build
  jobs:
  - deployment: DeployBookings
    displayName: deploy bookings
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'smarthotel-dev'   # creates an environment if it doesn’t exist
    strategy: 
      runOnce:
        deploy:                     # records deployments against ‘smarthotel-dev’
          steps:
          - script: echo deploy to test
          - script: echo run tests

  - deployment: DeployPayments
    displayName: deploy payments
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'smarthotel-dev'   # creates an environment if it doesn’t exist
    strategy: 
      runOnce:
        deploy:                     # records deployments against ‘smarthotel-dev’
          steps:
          - script: echo deploy to preprod
          - script: echo run tests

  - deployment: DeployNotifications
    displayName: deploy notifications
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'smarthotel-dev'   # creates an environment if it doesn’t exist
    strategy: 
      runOnce:
        deploy:                     # records deployments against ‘smarthotel-dev’
          steps:
          - script: echo deploy to preprod
          - script: echo run tests

  - deployment: DeployConfigurations
    displayName: deploy configurations
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'smarthotel-dev'   # creates an environment if it doesn’t exist
    strategy: 
      runOnce:
        deploy:                     # records deployments against ‘smarthotel-dev’
          steps:
          - script: echo deploy to preprod
          - script: echo run tests

- stage: SecurityTests
  dependsOn: Build
  jobs:
  - deployment: DeployWeb
    displayName: runSecurityTests
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'smarthotel-test'   # creates an environment if it doesn’t exist
    strategy: 
      runOnce:
        deploy:                     # records deployments against ‘smarthotel-dev’
          steps:
          - script: echo deploy to test
          - script: echo run tests

- stage: production
  dependsOn: 
  - test
  - SecurityTests
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'smarthotel-prod'   # creates an environment if it doesn’t exist
    strategy: 
      runOnce:
        deploy:                     # records deployments against ‘smarthotel-dev’
          steps:
          - script: echo deploy to preprod
          - script: echo run tests
